/*
 * GapsPanel3.java
 *
 * Panel 3 of 4.
 * Displays each term and the criteria used to search for the terms.
 */

package minoe;

import java.util.Vector;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;

/**
 * Panel 3 of 3.
 * Displays each term and the criteria used to search for the terms.
 * @author  Dan Spiteri
 */
public class GapsPanel3 extends javax.swing.JPanel {
    
    private GapsContainer container;
    private DefaultListModel documentListModel;
    private DefaultListModel groupListModel;
    private FilterPanel filterPanel;

    private Vector<String> selectedFiles; // the files that appear in the list

    private Vector<SearchCriteria> searchCriteria;
    
    int selectedcount = 0;
    int displayedcount = 0;
    
    /** Creates new form GapsPanel3
     * @param container 
     */
    public GapsPanel3(GapsContainer container) {
        this.searchCriteria = new Vector<SearchCriteria>();
        this.documentListModel = new DefaultListModel();
        this.groupListModel = new DefaultListModel();
        this.container = container;
        this.selectedFiles = new Vector<String>();
        initComponents();

        setFilterPanel(container.owner.globals.createFilterPanel());

        this.typePanel.setVisible(true);
        
    }

    public void setFilterPanel(FilterPanel panel){
        this.filterPanel = panel;
        this.filterContainerPanel.add(panel);
    }


    /**
     * Builds search filter criteria based upon which filters are selected.
     * @return criteria Hashtable Associated key/value pairs.
     */
    public Vector<SearchCriteria> getSearchCriteria(){
        return this.searchCriteria;
    }
    
    /**
     * Expands upon the getSearchCriteria() function by adding specific 
     * document names to filter for in the search.
     * @return
     */
    public Vector buildSearchFilter(){
        return null;
    }

    
    public void setStatusMessage(String message){
        this.statusMessage.setText(message);
    }
    

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup = new javax.swing.ButtonGroup();
        topPanel = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        typePanel = new javax.swing.JPanel();
        filterContainerPanel = new javax.swing.JPanel();
        groupPanel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        groupList = new javax.swing.JList();
        addButton = new javax.swing.JButton();
        removeButton = new javax.swing.JButton();
        statusMessagePanel = new javax.swing.JPanel();
        statusMessage = new javax.swing.JLabel();

        setLayout(new javax.swing.BoxLayout(this, javax.swing.BoxLayout.Y_AXIS));

        topPanel.setMaximumSize(new java.awt.Dimension(32767, 25));
        topPanel.setMinimumSize(new java.awt.Dimension(0, 25));
        topPanel.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));

        jLabel3.setFont(new java.awt.Font("Arial", 1, 11));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel3.setText(org.openide.util.NbBundle.getMessage(GapsPanel3.class, "GapsPanel3.jLabel3.text")); // NOI18N
        topPanel.add(jLabel3);

        add(topPanel);

        jSeparator1.setForeground(new java.awt.Color(51, 51, 51));
        jSeparator1.setMaximumSize(new java.awt.Dimension(32767, 5));
        jSeparator1.setMinimumSize(new java.awt.Dimension(1, 1));
        jSeparator1.setPreferredSize(new java.awt.Dimension(420, 2));
        add(jSeparator1);

        typePanel.setPreferredSize(new java.awt.Dimension(250, 200));
        typePanel.setLayout(new javax.swing.BoxLayout(typePanel, javax.swing.BoxLayout.Y_AXIS));

        filterContainerPanel.setMaximumSize(new java.awt.Dimension(3000, 3000));
        filterContainerPanel.setMinimumSize(new java.awt.Dimension(198, 150));
        filterContainerPanel.setPreferredSize(new java.awt.Dimension(250, 150));
        filterContainerPanel.setLayout(new javax.swing.BoxLayout(filterContainerPanel, javax.swing.BoxLayout.X_AXIS));
        typePanel.add(filterContainerPanel);

        add(typePanel);

        groupPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, org.openide.util.NbBundle.getMessage(GapsPanel3.class, "GapsPanel3.groupPanel.border.title"), javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 0, 11))); // NOI18N
        groupPanel.setFont(new java.awt.Font("Arial", 0, 11));
        groupPanel.setMaximumSize(new java.awt.Dimension(3000, 250));
        groupPanel.setMinimumSize(new java.awt.Dimension(100, 100));
        groupPanel.setPreferredSize(new java.awt.Dimension(400, 100));
        groupPanel.setLayout(new javax.swing.BoxLayout(groupPanel, javax.swing.BoxLayout.X_AXIS));

        jScrollPane1.setFont(new java.awt.Font("Arial", 0, 11));

        groupList.setModel(this.groupListModel);
        groupList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane1.setViewportView(groupList);

        groupPanel.add(jScrollPane1);

        addButton.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        addButton.setText(org.openide.util.NbBundle.getMessage(GapsPanel3.class, "GapsPanel3.addButton.text")); // NOI18N
        addButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addButtonActionPerformed(evt);
            }
        });
        groupPanel.add(addButton);

        removeButton.setFont(new java.awt.Font("Arial", 0, 11));
        removeButton.setText(org.openide.util.NbBundle.getMessage(GapsPanel3.class, "GapsPanel3.removeButton.text")); // NOI18N
        removeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeButtonActionPerformed(evt);
            }
        });
        groupPanel.add(removeButton);

        add(groupPanel);

        statusMessagePanel.setMaximumSize(new java.awt.Dimension(32767, 25));
        statusMessagePanel.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));

        statusMessage.setFont(new java.awt.Font("Dialog", 1, 12));
        statusMessage.setText(org.openide.util.NbBundle.getMessage(GapsPanel3.class, "GapsPanel3.statusMessage.text")); // NOI18N
        statusMessagePanel.add(statusMessage);

        add(statusMessagePanel);
    }// </editor-fold>//GEN-END:initComponents

/**
 * Handles the double-clicking of a file name.
 * @param evt
 */
private void addButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addButtonActionPerformed
    if(this.filterPanel.getTermDistance().isEmpty()){
       JOptionPane.showMessageDialog(null, "Please choose a word distance.");
       return;
    }
    if(this.filterPanel.getSelectedItems().getSize() > 0){
        addGroup();
    } else{
        JOptionPane.showMessageDialog(null, "No search options selected.");
    }
}//GEN-LAST:event_addButtonActionPerformed

private void removeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeButtonActionPerformed
    int[] selectedIndices = this.groupList.getSelectedIndices();
    if(this.groupList.getSelectedIndices().length > 0){
        for (int i : selectedIndices) {
            removeGroup(i);
        }
    } else{
        JOptionPane.showMessageDialog(null, "No group selected.");
    }
}//GEN-LAST:event_removeButtonActionPerformed

public void loadSession(Vector<SearchCriteria> vec){
    for(int i=0; i < vec.size(); i++){
        SearchCriteria sc = vec.get(i);
        this.groupListModel.addElement(sc.toString());
    }
}

public void addGroup(){
    String wordDist = this.filterPanel.getTermDistance();
    SearchCriteria sc = this.filterPanel.getSelectedItems();
    sc.setSlop(wordDist);
    this.searchCriteria.add(sc);
    this.groupListModel.addElement(sc.toString());
}

public void removeGroup(int i){
    this.searchCriteria.removeElementAt(i);
    this.groupListModel.removeElementAt(i);
}

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addButton;
    private javax.swing.ButtonGroup buttonGroup;
    private javax.swing.JPanel filterContainerPanel;
    private javax.swing.JList groupList;
    private javax.swing.JPanel groupPanel;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JButton removeButton;
    private javax.swing.JLabel statusMessage;
    private javax.swing.JPanel statusMessagePanel;
    private javax.swing.JPanel topPanel;
    private javax.swing.JPanel typePanel;
    // End of variables declaration//GEN-END:variables
    
}
